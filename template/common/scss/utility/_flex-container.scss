// Helper - Flex Container

/*--------------------------------------------------
  flex-container
--------------------------------------------------*/

@mixin flex-container($extend: true) {
  @if $extend {
    @extend %flex-container;
  } @else {
    & {
      display: flex;
      flex-wrap: wrap;
      overflow: hidden;
    }
    
    &.nowrap { flex-wrap: nowrap; }

    &.column { flex-direction: column; }
    &.column-reverse { flex-direction: column-reverse; }
    &.row-reverse { flex-direction: row-reverse; }

    &.align-start { align-items: flex-start; }
    &.align-center { align-items: center; }
    &.align-end { align-items: flex-end; }
    &.justify-start { justify-content: flex-start; }
    &.justify-center { justify-content: center; }
    &.justify-end { justify-content: flex-end; }
    &.justify-spacearound{ justify-content: space-around; }
    &.justify-spacebetween { justify-content: space-between; }
    &.justify-spaceevenly { justify-content: space-evenly; }
  }
}

%flex-container { @include flex-container($extend: false); }
  
.flex-container {
  @include flex-container;  
  
  &.gap10 { margin: -5px; & > div { padding: 5px; } }
  &.gap20 { margin: -10px; & > div { padding: 10px; } }
  &.gap30 { margin: -15px; & > div { padding: 15px; } }
  &.gap40 { margin: -20px; & > div { padding: 20px; } }
  &.gap50 { margin: -25px; & > div { padding: 25px; } }
  &.gap60 { margin: -30px; & > div { padding: 30px; } }
  &.gap70 { margin: -35px; & > div { padding: 35px; } }
  &.gap80 { margin: -40px; & > div { padding: 40px; } }
  &.gap90 { margin: -45px; & > div { padding: 45px; } }
  &.gap100 { margin: -50px; & > div { padding: 50px; } }

  &.grow > div { flex-grow: 1; }
  &.no-grow > div { flex-grow: 0; }
  &.shrink > div { flex-shrink: 1; }
  &.no-shrink > div { flex-shrink: 0; }
}

@media (min-width: $media-medium + 1) {
  .flex-container {

    &.desktop-gap10 { margin: -5px; & > div { padding: 5px; } }
    &.desktop-gap20 { margin: -10px; & > div { padding: 10px; } }
    &.desktop-gap30 { margin: -15px; & > div { padding: 15px; } }
    &.desktop-gap40 { margin: -20px; & > div { padding: 20px; } }
    &.desktop-gap50 { margin: -25px; & > div { padding: 25px; } }
    &.desktop-gap60 { margin: -30px; & > div { padding: 30px; } }
    &.desktop-gap70 { margin: -35px; & > div { padding: 35px; } }
    &.desktop-gap80 { margin: -40px; & > div { padding: 40px; } }
    &.desktop-gap90 { margin: -45px; & > div { padding: 45px; } }
    &.desktop-gap100 { margin: -50px; & > div { padding: 50px; } }

    &.desktop-grow > div { flex-grow: 1; }
    &.desktop-no-grow > div { flex-grow: 0; }
    &.desktop-shrink > div { flex-shrink: 1; }
    &.desktop-no-shrink > div { flex-shrink: 0; }
  }
}

@media (max-width: $media-medium) {
  .flex-container {

    &.mobile-gap10 { margin: -5px; & > div { padding: 5px; } }
    &.mobile-gap20 { margin: -10px; & > div { padding: 10px; } }
    &.mobile-gap30 { margin: -15px; & > div { padding: 15px; } }
    &.mobile-gap40 { margin: -20px; & > div { padding: 20px; } }
    &.mobile-gap50 { margin: -25px; & > div { padding: 25px; } }
    &.mobile-gap60 { margin: -30px; & > div { padding: 30px; } }
    &.mobile-gap70 { margin: -35px; & > div { padding: 35px; } }
    &.mobile-gap80 { margin: -40px; & > div { padding: 40px; } }
    &.mobile-gap90 { margin: -45px; & > div { padding: 45px; } }
    &.mobile-gap100 { margin: -50px; & > div { padding: 50px; } }

    &.mobile-grow > div { flex-grow: 1; }
    &.mobile-no-grow > div { flex-grow: 0; }
    &.mobile-shrink > div { flex-shrink: 1; }
    &.mobile-no-shrink > div { flex-shrink: 0; }
  }
}

/*--------------------------------------------------
  flex-container - Column
--------------------------------------------------*/

.flex-container { 
  .flex-content { width: 100%; }
}

@each $column-width in $col-width-list {
  $i: index($col-width-list, $column-width);
  .flex-container { .flex-content { &.xs#{$i} { max-width: nth($col-width-list, $i); } } }
}

@media (min-width: $media-small + 1) {
  @each $column-width in $col-width-list {
    $i: index($col-width-list, $column-width);
    .flex-container { .flex-content { &.s#{$i} { max-width: nth($col-width-list, $i); } } }
  }
}

@media (min-width: $media-medium + 1) {
  @each $column-width in $col-width-list {
    $i: index($col-width-list, $column-width);
    .flex-container { .flex-content { &.m#{$i} { max-width: nth($col-width-list, $i); } } }
  }
}

@media (min-width: $media-large + 1) {
  @each $column-width in $col-width-list {
    $i: index($col-width-list, $column-width);
    .flex-container { .flex-content { &.l#{$i} { max-width: nth($col-width-list, $i); } } }
  }
}